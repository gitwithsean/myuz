# Generated by Django 4.2 on 2023-04-11 14:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Appearance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("distinguishing_features", models.TextField()),
                ("eyes", models.CharField(max_length=200)),
                ("hair", models.CharField(max_length=200)),
                ("face", models.CharField(max_length=200)),
                ("build", models.CharField(blank=True, max_length=200, null=True)),
                ("movement", models.CharField(blank=True, max_length=200, null=True)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AppearanceModifiers",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("clothing", models.TextField(blank=True, null=True)),
                ("hair_head_options", models.TextField(blank=True, null=True)),
                ("perfume", models.CharField(blank=True, max_length=200, null=True)),
                ("makeup", models.CharField(blank=True, max_length=200, null=True)),
                ("shaving", models.CharField(blank=True, max_length=200, null=True)),
                ("hygiene", models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Belief",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="BGEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("event", models.CharField(max_length=200)),
                ("date_from", models.DateField(blank=True, null=True)),
                ("date_to", models.DateField(blank=True, null=True)),
                ("order_in_story_events", models.IntegerField(blank=True, null=True)),
                (
                    "order_in_narrative_telling",
                    models.IntegerField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BGResearch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("bg_research", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("chapter_num", models.IntegerField()),
                ("chapter_title", models.CharField(blank=True, max_length=200)),
                (
                    "books",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="noveller.book"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChapterPart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("part_title", models.CharField(blank=True, max_length=200)),
                ("part_num", models.IntegerField()),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.chapter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChapterPartOutline",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("chapter_summary", models.TextField(blank=True)),
                (
                    "for_chapter_part",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.chapterpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("age_at_start", models.IntegerField(blank=True, null=True)),
                ("gender", models.CharField(max_length=200)),
                ("sex", models.CharField(max_length=200)),
                ("sexuality", models.CharField(max_length=200)),
                ("origin", models.CharField(max_length=200)),
                ("permanent_characteristics", models.TextField()),
                ("elaboration", models.TextField(blank=True, null=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="noveller.book"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterTrait",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CharacterVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("version_num", models.IntegerField()),
                (
                    "version_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("age_at_start", models.IntegerField()),
                ("age_at_end", models.IntegerField()),
                (
                    "preferred_weapon",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("subter", models.CharField(blank=True, max_length=200, null=True)),
                ("elaboration", models.TextField(blank=True, null=True)),
                (
                    "appearance",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.appearance",
                    ),
                ),
                ("beliefs", models.ManyToManyField(blank=True, to="noveller.belief")),
            ],
        ),
        migrations.CreateModel(
            name="DeeperBGResearchTopic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("topic", models.CharField(max_length=200)),
                ("notes", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Drive",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Faction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "members",
                    models.ManyToManyField(blank=True, to="noveller.characterversion"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Fear",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("file_location", models.CharField(max_length=255)),
                ("file_content", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LiteraryTraits",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LitStyleGuide",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("inspirations", models.TextField(blank=True, null=True)),
                ("style_guide", models.TextField(blank=True, null=True)),
                ("compressed_sg", models.TextField(blank=True, null=True)),
                ("writing_samples", models.TextField(blank=True, null=True)),
                (
                    "avoid",
                    models.ManyToManyField(
                        blank=True,
                        related_name="litstyleguide_avoid",
                        to="noveller.literarytraits",
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="noveller.character",
                    ),
                ),
                (
                    "character_version",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.characterversion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ChangesFromPreviousCharacterVersion",
            fields=[
                (
                    "characterversion_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="noveller.characterversion",
                    ),
                ),
            ],
            bases=("noveller.characterversion",),
        ),
        migrations.CreateModel(
            name="StoryTeller",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="noveller.characterversion",
                    ),
                ),
                (
                    "style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="noveller.litstyleguide",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StoryEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("date_from", models.DateField(blank=True, null=True)),
                ("date_to", models.DateField(blank=True, null=True)),
                ("order_in_story_events", models.IntegerField(blank=True, null=True)),
                (
                    "order_in_narrative_telling",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="noveller.book"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Setting",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("general_setting", models.TextField(blank=True)),
                (
                    "bg_events",
                    models.ManyToManyField(blank=True, to="noveller.bgevent"),
                ),
                (
                    "bg_research",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.bgresearch",
                    ),
                ),
                ("books", models.ManyToManyField(blank=True, to="noveller.book")),
                ("factions", models.ManyToManyField(blank=True, to="noveller.faction")),
            ],
        ),
        migrations.CreateModel(
            name="Perspective",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
                (
                    "lit_style_guides",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perspectives",
                        to="noveller.litstyleguide",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
                (
                    "character_versions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="locations_in_character_version",
                        to="noveller.characterversion",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="litstyleguide",
            name="perspective",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="noveller.perspective"
            ),
        ),
        migrations.AddField(
            model_name="litstyleguide",
            name="traits",
            field=models.ManyToManyField(
                blank=True,
                related_name="litstyleguide_traits",
                to="noveller.literarytraits",
            ),
        ),
        migrations.AddField(
            model_name="literarytraits",
            name="lit_style_guide_avoid",
            field=models.ManyToManyField(
                blank=True,
                related_name="litstyleguide_avoid",
                to="noveller.litstyleguide",
            ),
        ),
        migrations.AddField(
            model_name="literarytraits",
            name="lit_style_guide_traits",
            field=models.ManyToManyField(
                blank=True,
                related_name="litstyleguide_traits",
                to="noveller.litstyleguide",
            ),
        ),
        migrations.CreateModel(
            name="InternalConflict",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("rel", models.CharField(max_length=200)),
                (
                    "character_version",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="internal_conflict_character_version",
                        to="noveller.characterversion",
                    ),
                ),
                (
                    "changes_from_previous_character_version",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="internal_conflict_changes_from_previous_character_version",
                        to="noveller.changesfrompreviouscharacterversion",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="characterversion",
            name="drives",
            field=models.ManyToManyField(blank=True, to="noveller.drive"),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="fears",
            field=models.ManyToManyField(blank=True, to="noveller.fear"),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="for_character",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.character",
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="internal_conflicts",
            field=models.ManyToManyField(blank=True, to="noveller.internalconflict"),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="lit_style_guides",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.litstyleguide",
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="locations",
            field=models.ManyToManyField(blank=True, to="noveller.location"),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="often_perceived_as",
            field=models.ManyToManyField(
                blank=True,
                related_name="often_perceived_as",
                to="noveller.charactertrait",
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="other_aspects",
            field=models.ManyToManyField(
                blank=True, related_name="other_aspects", to="noveller.charactertrait"
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="setting_based_appearance_modifier_options",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.appearancemodifiers",
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="strengths",
            field=models.ManyToManyField(
                blank=True, related_name="strengths", to="noveller.charactertrait"
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="weaknesses",
            field=models.ManyToManyField(
                blank=True, related_name="weaknesses", to="noveller.charactertrait"
            ),
        ),
        migrations.CreateModel(
            name="CharacterRelationship",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("age_started", models.IntegerField()),
                ("relationship_descriptors", models.TextField()),
                ("elaboration", models.TextField(blank=True, null=True)),
                (
                    "character_version",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="character_versions",
                        to="noveller.characterversion",
                    ),
                ),
                (
                    "relationship_from",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="has_relationship",
                        to="noveller.character",
                    ),
                ),
                (
                    "relationship_to",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="character_relationship",
                        to="noveller.character",
                    ),
                ),
                (
                    "changes_from_previous_version",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="character_version_changes",
                        to="noveller.changesfrompreviouscharacterversion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterRelatedSettingTopic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("rights", models.TextField()),
                ("attitudes", models.TextField()),
                ("leisure", models.TextField()),
                ("food", models.TextField()),
                ("work", models.TextField()),
                ("social_life", models.TextField()),
                (
                    "appearance_modifiers",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.appearancemodifiers",
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.characterversion",
                    ),
                ),
                (
                    "setting",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.setting",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="character",
            name="lit_style_guides",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="style_guide_for_character_perspective",
                to="noveller.litstyleguide",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="relationship_for",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="noveller.characterrelationship",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="relationship_with",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="noveller.characterrelationship",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="representative_of",
            field=models.ManyToManyField(blank=True, to="noveller.theme"),
        ),
        migrations.CreateModel(
            name="ChapterPartSummaryItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("content", models.TextField(blank=True)),
                (
                    "for_chapter_part_outline",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.chapterpartoutline",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chapterpartoutline",
            name="themes",
            field=models.ManyToManyField(blank=True, to="noveller.theme"),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="chapter_part_summary",
            field=models.ManyToManyField(blank=True, to="noveller.chapterpartoutline"),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="characters",
            field=models.ManyToManyField(blank=True, to="noveller.characterversion"),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="factions",
            field=models.ManyToManyField(blank=True, to="noveller.faction"),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="location",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.location",
            ),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="teller",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.storyteller",
            ),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="themes",
            field=models.ManyToManyField(blank=True, to="noveller.theme"),
        ),
        migrations.CreateModel(
            name="ChapterOutline",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("summary", models.TextField(blank=True)),
                (
                    "chapter_part_outline",
                    models.ManyToManyField(
                        blank=True, to="noveller.chapterpartoutline"
                    ),
                ),
                (
                    "for_chapter",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="noveller.chapter",
                    ),
                ),
                (
                    "story_event",
                    models.ManyToManyField(blank=True, to="noveller.storyevent"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chapter",
            name="chapter_file",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.file",
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="chapter_outline",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.chapteroutline",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="settings",
            field=models.ManyToManyField(blank=True, to="noveller.setting"),
        ),
        migrations.AddField(
            model_name="bgresearch",
            name="deeper_bg_research_topic",
            field=models.ManyToManyField(
                blank=True, to="noveller.deeperbgresearchtopic"
            ),
        ),
        migrations.AddField(
            model_name="appearancemodifiers",
            name="character_version",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="noveller.characterversion",
            ),
        ),
        migrations.AddField(
            model_name="appearance",
            name="character_version",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appearance_for_character_version",
                to="noveller.characterversion",
            ),
        ),
        migrations.AddField(
            model_name="characterversion",
            name="changes_from_previous_character_version",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="noveller.changesfrompreviouscharacterversion",
            ),
        ),
        migrations.AddField(
            model_name="changesfrompreviouscharacterversion",
            name="previous_character_version",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="previous_version",
                to="noveller.characterversion",
            ),
        ),
        migrations.AddField(
            model_name="appearance",
            name="changes_from_previous_character_version",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="version_appearane_change",
                to="noveller.changesfrompreviouscharacterversion",
            ),
        ),
    ]
