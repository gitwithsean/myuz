# Generated by Django 4.2 on 2023-04-12 00:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("noveller", "0031_book_chapters_book_characters_book_events_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LiteraryImagery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LiteraryMood",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LiterarySymbolism",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LiteraryTone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pacing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("elaboration", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="PlotEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("date_from", models.DateField(blank=True, null=True)),
                ("date_to", models.DateField(blank=True, null=True)),
                ("order_in_story_events", models.IntegerField(blank=True, null=True)),
                (
                    "order_in_narrative_telling",
                    models.IntegerField(blank=True, null=True),
                ),
                ("is_climax_of_plot", models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TargetAudience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("elaboration", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name="book",
            name="events",
        ),
        migrations.AddField(
            model_name="book",
            name="themes",
            field=models.ManyToManyField(
                blank=True, related_name="book_themes", to="noveller.theme"
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="chapter_goals",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="chapterpart",
            name="part_goals",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="character",
            name="character_arc",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="book",
            name="chapters",
            field=models.ManyToManyField(
                blank=True, related_name="books_chapters", to="noveller.chapter"
            ),
        ),
        migrations.AlterField(
            model_name="book",
            name="characters",
            field=models.ManyToManyField(
                blank=True,
                related_name="characters_book_characters",
                to="noveller.character",
            ),
        ),
        migrations.AlterField(
            model_name="chapter",
            name="parts_for_chapter",
            field=models.ManyToManyField(
                blank=True, related_name="chapters", to="noveller.chapterpart"
            ),
        ),
        migrations.AlterField(
            model_name="character",
            name="versions",
            field=models.ManyToManyField(
                blank=True, related_name="+", to="noveller.characterversion"
            ),
        ),
        migrations.AlterField(
            model_name="literaryinspirationperson",
            name="sources",
            field=models.ManyToManyField(
                blank=True, to="noveller.literaryinspirationsource"
            ),
        ),
        migrations.AlterField(
            model_name="litstyleguide",
            name="inspirations",
            field=models.ManyToManyField(
                blank=True, to="noveller.literaryinspirationperson"
            ),
        ),
        migrations.CreateModel(
            name="SubPlotEvent",
            fields=[
                (
                    "plotevent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="noveller.plotevent",
                    ),
                ),
            ],
            bases=("noveller.plotevent",),
        ),
        migrations.DeleteModel(
            name="StoryEvent",
        ),
        migrations.AddField(
            model_name="targetaudience",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="books_audience",
                to="noveller.book",
            ),
        ),
        migrations.AddField(
            model_name="plotevent",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="books_story_events",
                to="noveller.book",
            ),
        ),
        migrations.AddField(
            model_name="plotevent",
            name="foreshadowing",
            field=models.ManyToManyField(
                blank=True, related_name="SubPlotEvent", to="noveller.plotevent"
            ),
        ),
        migrations.AddField(
            model_name="genre",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="books_genres",
                to="noveller.book",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="genre",
            field=models.ManyToManyField(
                blank=True, related_name="book_genres", to="noveller.genre"
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="plot",
            field=models.ManyToManyField(
                blank=True, related_name="books_events", to="noveller.plotevent"
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="target_audience",
            field=models.ManyToManyField(
                blank=True, related_name="book_audiences", to="noveller.targetaudience"
            ),
        ),
        migrations.AddField(
            model_name="chapterpartsummary",
            name="pacing",
            field=models.ManyToManyField(blank=True, to="noveller.pacing"),
        ),
        migrations.AddField(
            model_name="litstyleguide",
            name="imagery",
            field=models.ManyToManyField(blank=True, to="noveller.literaryimagery"),
        ),
        migrations.AddField(
            model_name="litstyleguide",
            name="symbolism",
            field=models.ManyToManyField(blank=True, to="noveller.literarysymbolism"),
        ),
        migrations.AddField(
            model_name="litstyleguide",
            name="tone",
            field=models.ManyToManyField(blank=True, to="noveller.literarytone"),
        ),
        migrations.AddField(
            model_name="subplotevent",
            name="sub_plot_of",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="books_sub_plot_events",
                to="noveller.book",
            ),
        ),
    ]
